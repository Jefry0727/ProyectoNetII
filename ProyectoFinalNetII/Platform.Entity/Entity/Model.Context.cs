//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Platform.Entity.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EntityEntities : DbContext
    {
        public EntityEntities()
            : base("name=EntityEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Actividad> Actividad { get; set; }
        public virtual DbSet<Cargo> Cargo { get; set; }
        public virtual DbSet<Integrante> Integrante { get; set; }
        public virtual DbSet<Proyecto> Proyecto { get; set; }
        public virtual DbSet<Recurso> Recurso { get; set; }
        public virtual DbSet<Recurso_Tarea> Recurso_Tarea { get; set; }
        public virtual DbSet<Reunion> Reunion { get; set; }
        public virtual DbSet<Tarea> Tarea { get; set; }
        public virtual DbSet<Tipo_Usuario> Tipo_Usuario { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
    
        public virtual int crearActividad(string nombre, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin, string descripcion, Nullable<int> proyectoId, Nullable<int> integranteId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var integranteIdParameter = integranteId.HasValue ?
                new ObjectParameter("integranteId", integranteId) :
                new ObjectParameter("integranteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearActividad", nombreParameter, fecha_iniParameter, fecha_finParameter, descripcionParameter, proyectoIdParameter, integranteIdParameter);
        }
    
        public virtual int crearCargo(string nombre, Nullable<double> salario, string horario, Nullable<int> idPro)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("salario", salario) :
                new ObjectParameter("salario", typeof(double));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("horario", horario) :
                new ObjectParameter("horario", typeof(string));
    
            var idProParameter = idPro.HasValue ?
                new ObjectParameter("idPro", idPro) :
                new ObjectParameter("idPro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearCargo", nombreParameter, salarioParameter, horarioParameter, idProParameter);
        }
    
        public virtual int crearIntegrante(Nullable<int> proyectoId, Nullable<int> cargoId, Nullable<int> usuarioId)
        {
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var cargoIdParameter = cargoId.HasValue ?
                new ObjectParameter("cargoId", cargoId) :
                new ObjectParameter("cargoId", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearIntegrante", proyectoIdParameter, cargoIdParameter, usuarioIdParameter);
        }
    
        public virtual int crearProyecto(string nombre, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin, string etapa, Nullable<int> directorId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var etapaParameter = etapa != null ?
                new ObjectParameter("etapa", etapa) :
                new ObjectParameter("etapa", typeof(string));
    
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("directorId", directorId) :
                new ObjectParameter("directorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearProyecto", nombreParameter, fecha_iniParameter, fecha_finParameter, etapaParameter, directorIdParameter);
        }
    
        public virtual int crearRecurso(string nombre, Nullable<int> cantidad, string ubicacion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearRecurso", nombreParameter, cantidadParameter, ubicacionParameter);
        }
    
        public virtual int crearReunion(string lugar, string tematica, Nullable<int> proyectoId)
        {
            var lugarParameter = lugar != null ?
                new ObjectParameter("lugar", lugar) :
                new ObjectParameter("lugar", typeof(string));
    
            var tematicaParameter = tematica != null ?
                new ObjectParameter("tematica", tematica) :
                new ObjectParameter("tematica", typeof(string));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearReunion", lugarParameter, tematicaParameter, proyectoIdParameter);
        }
    
        public virtual int crearTarea(string nombre, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin, string porcentaje, string estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var porcentajeParameter = porcentaje != null ?
                new ObjectParameter("porcentaje", porcentaje) :
                new ObjectParameter("porcentaje", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearTarea", nombreParameter, fecha_iniParameter, fecha_finParameter, porcentajeParameter, estadoParameter);
        }
    
        public virtual int createRecursoTarea(Nullable<int> cantidad, Nullable<int> actividadId, Nullable<int> tareaId, Nullable<int> recursoId)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var actividadIdParameter = actividadId.HasValue ?
                new ObjectParameter("actividadId", actividadId) :
                new ObjectParameter("actividadId", typeof(int));
    
            var tareaIdParameter = tareaId.HasValue ?
                new ObjectParameter("tareaId", tareaId) :
                new ObjectParameter("tareaId", typeof(int));
    
            var recursoIdParameter = recursoId.HasValue ?
                new ObjectParameter("recursoId", recursoId) :
                new ObjectParameter("recursoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("createRecursoTarea", cantidadParameter, actividadIdParameter, tareaIdParameter, recursoIdParameter);
        }
    
        public virtual int descontarRecurso(Nullable<int> cantidad, Nullable<int> recursoId)
        {
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var recursoIdParameter = recursoId.HasValue ?
                new ObjectParameter("recursoId", recursoId) :
                new ObjectParameter("recursoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("descontarRecurso", cantidadParameter, recursoIdParameter);
        }
    
        public virtual int editarActividad(Nullable<int> id, string nombre, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin, string descripcion, Nullable<int> proyectoId, Nullable<int> integranteId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var integranteIdParameter = integranteId.HasValue ?
                new ObjectParameter("integranteId", integranteId) :
                new ObjectParameter("integranteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarActividad", idParameter, nombreParameter, fecha_iniParameter, fecha_finParameter, descripcionParameter, proyectoIdParameter, integranteIdParameter);
        }
    
        public virtual int editarIntegrante(Nullable<int> id, Nullable<int> proyectoId, Nullable<int> cargoId, Nullable<int> usuarioId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            var cargoIdParameter = cargoId.HasValue ?
                new ObjectParameter("cargoId", cargoId) :
                new ObjectParameter("cargoId", typeof(int));
    
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("usuarioId", usuarioId) :
                new ObjectParameter("usuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarIntegrante", idParameter, proyectoIdParameter, cargoIdParameter, usuarioIdParameter);
        }
    
        public virtual int editarProyecto(Nullable<int> id, string nombre, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin, string etapa, Nullable<int> directorId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var etapaParameter = etapa != null ?
                new ObjectParameter("etapa", etapa) :
                new ObjectParameter("etapa", typeof(string));
    
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("directorId", directorId) :
                new ObjectParameter("directorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarProyecto", idParameter, nombreParameter, fecha_iniParameter, fecha_finParameter, etapaParameter, directorIdParameter);
        }
    
        public virtual int editarRecurso(Nullable<int> id, string nombre, Nullable<int> cantidad, string ubicacion)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("ubicacion", ubicacion) :
                new ObjectParameter("ubicacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarRecurso", idParameter, nombreParameter, cantidadParameter, ubicacionParameter);
        }
    
        public virtual int editarRecursoTarea(Nullable<int> id, Nullable<int> cantidad, Nullable<int> actividadId, Nullable<int> tareaId, Nullable<int> recursoId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("cantidad", cantidad) :
                new ObjectParameter("cantidad", typeof(int));
    
            var actividadIdParameter = actividadId.HasValue ?
                new ObjectParameter("actividadId", actividadId) :
                new ObjectParameter("actividadId", typeof(int));
    
            var tareaIdParameter = tareaId.HasValue ?
                new ObjectParameter("tareaId", tareaId) :
                new ObjectParameter("tareaId", typeof(int));
    
            var recursoIdParameter = recursoId.HasValue ?
                new ObjectParameter("recursoId", recursoId) :
                new ObjectParameter("recursoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarRecursoTarea", idParameter, cantidadParameter, actividadIdParameter, tareaIdParameter, recursoIdParameter);
        }
    
        public virtual int editarReunion(Nullable<int> id, string lugar, string tematica, Nullable<int> proyectoId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lugarParameter = lugar != null ?
                new ObjectParameter("lugar", lugar) :
                new ObjectParameter("lugar", typeof(string));
    
            var tematicaParameter = tematica != null ?
                new ObjectParameter("tematica", tematica) :
                new ObjectParameter("tematica", typeof(string));
    
            var proyectoIdParameter = proyectoId.HasValue ?
                new ObjectParameter("proyectoId", proyectoId) :
                new ObjectParameter("proyectoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarReunion", idParameter, lugarParameter, tematicaParameter, proyectoIdParameter);
        }
    
        public virtual int editarTarea(Nullable<int> id, string nombre, Nullable<System.DateTime> fecha_ini, Nullable<System.DateTime> fecha_fin, string porcentaje, string estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fecha_iniParameter = fecha_ini.HasValue ?
                new ObjectParameter("fecha_ini", fecha_ini) :
                new ObjectParameter("fecha_ini", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            var porcentajeParameter = porcentaje != null ?
                new ObjectParameter("porcentaje", porcentaje) :
                new ObjectParameter("porcentaje", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarTarea", idParameter, nombreParameter, fecha_iniParameter, fecha_finParameter, porcentajeParameter, estadoParameter);
        }
    
        public virtual int eliminarActividad(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarActividad", idParameter);
        }
    
        public virtual int eliminarIntegrante(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarIntegrante", idParameter);
        }
    
        public virtual int eliminarProyecto(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarProyecto", idParameter);
        }
    
        public virtual int eliminarRecurso(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarRecurso", idParameter);
        }
    
        public virtual int eliminarRecursoTarea(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarRecursoTarea", idParameter);
        }
    
        public virtual int eliminarReunion(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarReunion", idParameter);
        }
    
        public virtual int eliminarTarea(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminarTarea", idParameter);
        }
    
        public virtual int registrarUsuDirector(string cedula, string nombre, string apellido, Nullable<int> edad, string telefono, string usuario, string contra, Nullable<int> tipoUsuario, string correo)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var edadParameter = edad.HasValue ?
                new ObjectParameter("edad", edad) :
                new ObjectParameter("edad", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contraParameter = contra != null ?
                new ObjectParameter("contra", contra) :
                new ObjectParameter("contra", typeof(string));
    
            var tipoUsuarioParameter = tipoUsuario.HasValue ?
                new ObjectParameter("tipoUsuario", tipoUsuario) :
                new ObjectParameter("tipoUsuario", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("registrarUsuDirector", cedulaParameter, nombreParameter, apellidoParameter, edadParameter, telefonoParameter, usuarioParameter, contraParameter, tipoUsuarioParameter, correoParameter);
        }
    }
}
